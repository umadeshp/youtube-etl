import{d as x,f as v,e as y,v as b,K as g,g as h,h as w,c as k,o as C,i as a,k as u,m as e,A as I,O as B,I as m,D,L as d,Y as E}from"./index-B0cSqUYc.js";import{_ as N}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-CaSl_iYH.js";import{u as O}from"./usePageTitle-CARQDM5z.js";import{u as P}from"./usePrefectApi-BNalMfzZ.js";import"./mapper-yP6FSD6p.js";import"./api-D0hrn_eh.js";const K=x({__name:"AutomationEdit",async setup(T){let o,r;const i=P(),c=v(),_=y(),p=b("automationId"),s=([o,r]=g(()=>i.automations.getAutomation(p.value)),o=await o,r(),o);O(`Edit Automation: ${s.name}`);const f=h(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function A(l){try{await i.automations.updateAutomation(p.value,l),d(m.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=E(t,m.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=w("p-layout-default");return C(),k(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(I),{crumbs:f.value},{actions:a(()=>[u(e(B),{to:e(m).docs.automations},{default:a(()=>[...t[0]||(t[0]=[D(" Documentation ",-1)])]),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(N,{automation:e(s),editing:"",onSubmit:A},null,8,["automation"])]),_:1})}}});export{K as default};
//# sourceMappingURL=AutomationEdit-D1JHwT66.js.map
